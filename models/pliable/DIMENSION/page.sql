-- This file was automatically generated by PLIABLE (https://app.pliable.co). 
-- Please do not edit this file directly, as it will be overwritten the next time someone commits their changes in Pliable.

{{ config(materialized="table") }}


with
    group_assignments as (
        select _plb_uuid, 'plb:::m:page::r:' || sha1(_plb_merge_key) as _plb_group_id
        from
            (

                (
                    select
                        _plb_uuid,
                        concat_ws(
                            '|',
                            ifnull(
                                coalesce(
                                    (
                                        case
                                            when
                                                "gsc_keyword_page_clean"."Extract Page"
                                                ::string
                                                is null
                                                or "gsc_keyword_page_clean"."Extract Page"
                                                ::string::string
                                                = ''
                                            then null
                                            else
                                                "gsc_keyword_page_clean"."Extract Page"
                                                ::string
                                        end
                                    ),
                                    null
                                ),
                                _plb_uuid
                            )
                        ) as _plb_merge_key
                    from {{ ref("gsc_keyword_page_clean") }} as "gsc_keyword_page_clean"
                )
                union all
                (
                    select
                        _plb_uuid,
                        concat_ws(
                            '|',
                            ifnull(
                                coalesce(
                                    null,
                                    (
                                        case
                                            when
                                                "ga4_page_path_report"."PAGE_PATH"
                                                ::string
                                                is null
                                                or "ga4_page_path_report"."PAGE_PATH"
                                                ::string::string
                                                = ''
                                            then null
                                            else
                                                "ga4_page_path_report"."PAGE_PATH"
                                                ::string
                                        end
                                    )
                                ),
                                _plb_uuid
                            )
                        ) as _plb_merge_key
                    from {{ ref("ga4_page_path_report") }} as "ga4_page_path_report"
                )

            )
    ),
    final_group_assignments as (select * from group_assignments),
    "gsc_keyword_page_clean" as (
        select
            s._plb_uuid,
            s._plb_loaded_at,
            g._plb_group_id
            {% for col in adapter.get_columns_in_relation(
                ref("gsc_keyword_page_clean")
            ) -%}
                {% if not col.column.startswith("_PLB") %}
                    , "{{col.column}}"::string as "{{col.column}}"
                {% endif %}

            {% endfor %}
        from {{ ref("gsc_keyword_page_clean") }} s
        left join final_group_assignments g on s._plb_uuid = g._plb_uuid
        qualify
            row_number() over (
                partition by g._plb_group_id order by s._plb_loaded_at desc
            )
            = 1
    ),
    "ga4_page_path_report" as (
        select
            s._plb_uuid,
            s._plb_loaded_at,
            g._plb_group_id
            {% for col in adapter.get_columns_in_relation(
                ref("ga4_page_path_report")
            ) -%}
                {% if not col.column.startswith("_PLB") %}
                    , "{{col.column}}"::string as "{{col.column}}"
                {% endif %}

            {% endfor %}
        from {{ ref("ga4_page_path_report") }} s
        left join final_group_assignments g on s._plb_uuid = g._plb_uuid
        qualify
            row_number() over (
                partition by g._plb_group_id order by s._plb_loaded_at desc
            )
            = 1
    ),
    _plb_distinct_group_ids as (
        select distinct _plb_group_id
        from
            (
                select _plb_group_id
                from "gsc_keyword_page_clean"
                union all
                select _plb_group_id
                from "ga4_page_path_report"
            )
    ),
    merged as (
        select distinct
            coalesce(
                "gsc_keyword_page_clean"._plb_group_id,
                "ga4_page_path_report"._plb_group_id
            ) as _plb_uuid,
            greatest(
                "gsc_keyword_page_clean"._plb_loaded_at,
                "ga4_page_path_report"._plb_loaded_at
            ) as _plb_loaded_at,
            coalesce(
                (
                    case
                        when
                            "gsc_keyword_page_clean"."Extract Page"::string is null
                            or "gsc_keyword_page_clean"."Extract Page"::string::string
                            = ''
                        then null
                        else "gsc_keyword_page_clean"."Extract Page"::string
                    end
                ),
                (
                    case
                        when
                            "ga4_page_path_report"."PAGE_PATH"::string is null
                            or "ga4_page_path_report"."PAGE_PATH"::string::string = ''
                        then null
                        else "ga4_page_path_report"."PAGE_PATH"::string
                    end
                )
            ) as "PAGE"
        from _plb_distinct_group_ids
        full outer join
            "gsc_keyword_page_clean"
            on _plb_distinct_group_ids._plb_group_id
            = "gsc_keyword_page_clean"._plb_group_id
        full outer join
            "ga4_page_path_report"
            on _plb_distinct_group_ids._plb_group_id
            = "ga4_page_path_report"._plb_group_id
    ),
    transformed as (

        select
            -- Generate a new deterministic UUID unique to this particular model
            'plb:::m:page::r:' || sha1(_plb_uuid) as _plb_uuid,
            _plb_loaded_at as _plb_loaded_at,
            try_cast(("PAGE")::string as varchar) as "PAGE"
        from merged

    )

select *
from transformed
where
    1 = 1
    and (
        "PAGE" not like '/account%'
        and "PAGE" not like '%/checkout%'
        and "PAGE" not like '/product%'
        and "PAGE" not like '%cart/%'
        and "PAGE" not like '%founder%'
        and "PAGE" not like '%gift_cards%'
        and "PAGE" not like '%/order%'
    )

